---
# --- System Preparation ---
- name: Update system package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install required system packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - curl
      - gnupg
      - software-properties-common
      - net-tools
      - lsb-release
    state: present
    update_cache: yes

# --- Elasticsearch / Kibana / Logstash ---
- name: Add Elastic GPG key
  ansible.builtin.apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add Elastic repository
  ansible.builtin.apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/{{ elastic_version | regex_replace('\\..*', '') }}.x/apt stable main"
    state: present

- name: Install Elastic Stack packages
  ansible.builtin.apt:
    name:
      - elasticsearch
      - kibana
      - logstash
    state: present
  notify:
    - restart logstash

- name: Deploy Elasticsearch configuration
  ansible.builtin.template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: "0640"

- name: Enable automatic creation of system indices
  ansible.builtin.lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    line: "action.auto_create_index: *"
    state: present
  notify: restart elasticsearch

# --- Generate Elasticsearch passwords automatically ---
- name: Wait for Elasticsearch to start responding
  uri:
    url: "http://localhost:9200"
    status_code: 200
  register: es_status
  retries: 10
  delay: 10
  until: es_status.status == 200
  ignore_errors: yes

- name: Reset elastic password
  ansible.builtin.command: >
    /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -b
  register: elastic_password_reset
  changed_when: "'New value' in elastic_password_reset.stdout"

- name: Extract elastic password
  ansible.builtin.set_fact:
    elastic_password: "{{ elastic_password_reset.stdout | regex_search('New value for elastic password: (.*)', '\\1') | first }}"

- name: Reset kibana_system password
  ansible.builtin.command: >
    /usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system -b
  register: kibana_password_reset
  changed_when: "'New value' in kibana_password_reset.stdout"

- name: Extract kibana_system password
  ansible.builtin.set_fact:
    kibana_system_password: "{{ kibana_password_reset.stdout | regex_search('New value for kibana_system password: (.*)', '\\1') | first }}"

- name: Save generated passwords
  ansible.builtin.copy:
    content: |
      elastic_password={{ elastic_password }}
      kibana_system_password={{ kibana_system_password }}
    dest: /root/elastic_passwords.txt
    mode: "0600"

# --- Deploy Kibana configuration ---
- name: Deploy Kibana configuration with generated password
  ansible.builtin.template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: "0644"
  notify: restart kibana

# --- Wazuh Manager ---
- name: Setup Wazuh Server
  block:
    - name: Add Wazuh APT key
      ansible.builtin.apt_key:
        url: https://packages.wazuh.com/key/GPG-KEY-WAZUH
        state: present

    - name: Add Wazuh repository
      ansible.builtin.apt_repository:
        repo: "deb https://packages.wazuh.com/4.x/apt/ stable main"
        state: present

    - name: Install Wazuh Manager package
      ansible.builtin.apt:
        name: wazuh-manager
        state: present
        update_cache: yes
      notify: restart wazuh manager

# --- Filebeat (Wazuh integration) ---
- name: Install Filebeat package
  ansible.builtin.apt:
    name: filebeat
    state: present

- name: Configure Filebeat for Wazuh
  block:
    - name: Deploy Filebeat configuration
      ansible.builtin.template:
        src: wazuh-filebeat.conf.j2
        dest: /etc/filebeat/filebeat.yml
        owner: root
        group: root
        mode: "0644"
      notify: restart filebeat

    - name: Create Filebeat keystore if not exists
      ansible.builtin.command: filebeat keystore create
      args:
        creates: /etc/filebeat/keystore

    - name: Add default credentials to Filebeat keystore
      ansible.builtin.shell: |
        echo admin | filebeat keystore add username --stdin --force
        echo admin | filebeat keystore add password --stdin --force

    - name: Download Wazuh alerts template
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/wazuh/wazuh/v4.13.1/extensions/elasticsearch/7.x/wazuh-template.json
        dest: /etc/filebeat/wazuh-template.json
        mode: "0644"

    - name: Install Wazuh Filebeat module
      ansible.builtin.unarchive:
        src: https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.4.tar.gz
        dest: /usr/share/filebeat/module
        remote_src: yes
      notify: restart filebeat
