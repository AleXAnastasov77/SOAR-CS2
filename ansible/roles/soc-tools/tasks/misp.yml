---
- name: Install MISP dependencies
  apt:
    name:
      - curl
      - git
      - gcc
      - gpg-agent
      - make
      - openssl
      - redis-server
      - unzip
      - zip
      - python3
      - python3-pip
      - python3-virtualenv
      - mariadb-server
      - apache2
      - apache2-utils
      - libxml2-dev
      - libxslt1-dev
      - zlib1g-dev
      - libfuzzy-dev
      - libjpeg-dev
    state: present
    update_cache: yes

- name: Enable and start Redis and MariaDB
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - redis-server
    - mariadb
- name: Add Ondrej PHP 7.4 PPA
  apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: yes

# --- PHP 7.4 ---
- name: Install PHP 7.4 and required extensions
  apt:
    name:
      - software-properties-common
      - php7.4
      - php7.4-cli
      - php7.4-dev
      - libapache2-mod-php7.4
      - php7.4-mysql
      - php7.4-xml
      - php7.4-mbstring
      - php7.4-intl
      - php7.4-bcmath
      - php7.4-zip
      - php7.4-curl
      - php7.4-gd
      - php7.4-redis
      - php7.4-gnupg
    state: present
    update_cache: yes

- name: Configure PHP settings
  lineinfile:
    path: "{{ PHP_INI }}"
    regexp: "^{{ item.key }}"
    line: "{{ item.key }} = {{ item.value }}"
  loop:
    - { key: "upload_max_filesize", value: "50M" }
    - { key: "post_max_size", value: "50M" }
    - { key: "max_execution_time", value: "300" }
    - { key: "memory_limit", value: "2048M" }

# --- MISP Source ---
- name: Clone MISP repository
  git:
    repo: "https://github.com/MISP/MISP.git"
    dest: /var/www/MISP
    version: "2.4"
    update: no

- name: Install CakePHP dependencies with Composer
  shell: |
    cd /var/www/MISP/app
    php composer.phar install --no-dev
  args:
    creates: /var/www/MISP/app/vendor/autoload.php


# --- Prepare MariaDB for MISP (matches prepareDB.sh) ---

- name: Install Python MySQL dependencies
  apt:
    name: python3-pymysql
    state: present

- name: Ensure MariaDB is started
  service:
    name: mariadb
    state: started
    enabled: yes

- name: Remove anonymous MySQL users
  mysql_user:
    name: ''
    host_all: true
    state: absent
    login_user: root

- name: Drop test database
  mysql_db:
    name: test
    state: absent
    login_user: root

- name: Disallow remote root logins
  mysql_user:
    name: root
    host: "{{ item }}"
    state: absent
    login_user: root
  loop:
    - "{{ ansible_hostname }}"
    - '::1'
    - '127.0.0.1'

- name: Create MISP database
  mysql_db:
    name: misp
    state: present
    encoding: utf8
    collation: utf8_unicode_ci
    login_user: root

- name: Create MISP user with privileges
  mysql_user:
    name: misp
    password: misp
    host: localhost
    priv: "misp.*:ALL"
    state: present
    login_user: root

- name: Import default MISP schema
  mysql_db:
    name: misp
    state: import
    target: /var/www/MISP/INSTALL/MYSQL.sql
    login_user: misp
    login_password: misp

# --- Step 9: MISP configuration ---

# --- Step 9: MISP configuration (final version) ---

# 9.1 Copy default config templates
- name: Copy MISP default configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
    owner: www-data
    group: www-data
    mode: "0640"
  loop:
    - {
        src: /var/www/MISP/app/Config/bootstrap.default.php,
        dest: /var/www/MISP/app/Config/bootstrap.php,
      }
    - {
        src: /var/www/MISP/app/Config/core.default.php,
        dest: /var/www/MISP/app/Config/core.php,
      }
    - {
        src: /var/www/MISP/app/Config/config.default.php,
        dest: /var/www/MISP/app/Config/config.php,
      }

# 9.2 Create database.php (DB: misp / password: misp)
- name: Write database.php
  copy:
    dest: /var/www/MISP/app/Config/database.php
    owner: www-data
    group: www-data
    mode: "0640"
    content: |
      <?php
      class DATABASE_CONFIG {
        public $default = array(
          'datasource' => 'Database/Mysql',
          'persistent' => false,
          'host' => 'localhost',
          'login' => 'misp',
          'port' => 3306,
          'password' => 'misp',
          'database' => 'misp',
          'prefix' => '',
          'encoding' => 'utf8',
        );
      }

# 9.3 Set baseurl (HTTP, not HTTPS)
- name: Set baseurl in config.php
  lineinfile:
    path: /var/www/MISP/app/Config/config.php
    regexp: "('baseurl'\\s*=>).*"
    line: "  'baseurl' => 'http://siem.innovatech.internal',"
    backrefs: yes

# 9.4 Configure timezone
- name: Set timezone in core.php
  replace:
    path: /var/www/MISP/app/Config/core.php
    regexp: "^\\s*//\\s*date_default_timezone_set\\('UTC'\\);"
    replace: "date_default_timezone_set('Europe/Amsterdam');"

# 9.5 Set random salt (40 chars)
- name: Set Security.salt in config.php
  replace:
    path: /var/www/MISP/app/Config/config.php
    regexp: "('salt'\\s*=>\\s*)'.*'"
    replace: "\\1'{{ lookup('password', '/dev/null chars=ascii_letters,digits length=40') }}'"

# 9.6 Fix ownership and permissions
- name: Fix MISP config permissions
  file:
    path: /var/www/MISP/app/Config
    owner: www-data
    group: www-data
    mode: "0750"
    recurse: yes

# --- Apache Config ---
- name: Configure Apache for MISP
  copy:
    dest: /etc/apache2/sites-available/misp.conf
    content: |
      <VirtualHost *:80>
          ServerAdmin admin@localhost
          DocumentRoot /var/www/MISP/app/webroot
          <Directory /var/www/MISP/app/webroot>
              Options -Indexes
              AllowOverride All
              Require all granted
          </Directory>
          ErrorLog ${APACHE_LOG_DIR}/misp_error.log
          CustomLog ${APACHE_LOG_DIR}/misp_access.log combined
      </VirtualHost>

- name: Enable site and rewrite module
  shell: |
    a2enmod rewrite
    a2ensite misp.conf
    a2dissite 000-default
    systemctl reload apache2

# --- Permissions ---
- name: Fix ownership and permissions
  file:
    path: /var/www/MISP
    owner: www-data
    group: www-data
    recurse: yes

- name: Ensure MISP app folders are writable
  file:
    path: "{{ item }}"
    mode: "g+ws"
    recurse: yes
  loop:
    - /var/www/MISP/app/tmp
    - /var/www/MISP/app/files
    - /var/www/MISP/app/files/scripts/tmp

# --- Final services ---
- name: Restart services
  systemd:
    name: "{{ item }}"
    state: restarted
  loop:
    - apache2
    - mariadb
    - redis-server
- name: Check if MISP web interface is reachable
  uri:
    url: "http://localhost"
    return_content: yes
    status_code: 200
  register: misp_check

- name: Print MISP check result
  debug:
    msg: >
      MISP is reachable and returned status code {{ misp_check.status }}
  failed_when: misp_check.status != 200
