---


# --- 0. System upgrade ---
- name: Ensure system is up to date
  apt:
    upgrade: dist
    update_cache: yes
    autoclean: yes
  environment:
    DEBIAN_FRONTEND: noninteractive
    DEBIAN_PRIORITY: critical

# --- 1. Ensure sudo and etckeeper installed ---
- name: Install sudo, curl, and etckeeper
  apt:
    name:
      - sudo
      - curl
      - etckeeper
    state: present
    update_cache: yes

# --- 2. Ensure MISP user exists ---
- name: Ensure MISP user exists
  user:
    name: "{{ misp_user }}"
    groups: "sudo,staff,www-data"
    append: yes
    shell: /bin/bash
    state: present
    create_home: yes

# --- 3. Ensure /usr/local/src writable by misp ---
- name: Ensure /usr/local/src exists with proper permissions
  file:
    path: /usr/local/src
    state: directory
    owner: root
    group: staff
    mode: "2775"

# --- 4. Install Postfix non-interactively ---
- name: Preseed postfix to avoid prompt
  debconf:
    name: postfix
    question: "postfix/main_mailer_type"
    value: "Satellite system"
    vtype: "string"

- name: Install Postfix and dialog
  apt:
    name:
      - postfix
      - dialog
    state: present
    update_cache: yes
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Ensure Postfix service is enabled and running
  service:
    name: postfix
    state: started
    enabled: yes

# === STEP 2â€“5: Core dependencies, PHP, MISP Core, CakePHP ===

- name: Install core system dependencies
  apt:
    name:
      - curl
      - gcc
      - git
      - gpg-agent
      - make
      - python3
      - python3-pip
      - python3-dev
      - openssl
      - redis-server
      - vim
      - zip
      - unzip
      - virtualenv
      - libfuzzy-dev
      - sqlite3
      - moreutils
      - libxml2-dev
      - libxslt1-dev
      - zlib1g-dev
      - python3-setuptools
      - mariadb-client
      - mariadb-server
      - apache2
      - apache2-utils
    state: present
    update_cache: yes

- name: Ensure required services are enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - apache2
    - mariadb
    - redis-server

- name: Add PHP repository (Ondrej PPA stable)
  apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: yes

- name: Install PHP 7.4 and extensions
  apt:
    name:
      - php7.4
      - php7.4-cli
      - php7.4-dev
      - php7.4-xml
      - php7.4-mysql
      - php7.4-mbstring
      - php7.4-zip
      - php7.4-intl
      - php7.4-bcmath
      - php7.4-gd
      - libapache2-mod-php7.4
      - libgpgme-dev
    state: present

- name: Install PECL redis and gnupg extensions
  shell: |
    yes '' | pecl install -f redis
    yes '' | pecl install -f gnupg
    echo "extension=redis.so" > /etc/php/7.4/mods-available/redis.ini
    echo "extension=gnupg.so" > /etc/php/7.4/mods-available/gnupg.ini
    phpenmod redis gnupg

- name: Tune PHP settings for MISP
  lineinfile:
    path: /etc/php/7.4/apache2/php.ini
    regexp: "^{{ item.key }}"
    line: "{{ item.key }} = {{ item.value }}"
  loop:
    - { key: "upload_max_filesize", value: "{{ php_upload_max }}" }
    - { key: "post_max_size", value: "{{ php_post_max }}" }
    - { key: "max_execution_time", value: "{{ php_execution_time }}" }
    - { key: "memory_limit", value: "{{ php_memory_limit }}" }

# --- MISP Core ---
- name: Clone MISP repository
  git:
    repo: "https://github.com/MISP/MISP.git"
    dest: "{{ path_to_misp }}"
    version: "2.4"
    update: no

- name: Initialize MISP submodules
  command: git submodule update --init --recursive
  args:
    chdir: "{{ path_to_misp }}"

- name: Create Python virtual environment for MISP
  command: python3 -m venv "{{ path_to_misp }}/venv"

- name: Install Python dependencies
  pip:
    name:
      - ordered-set
      - python-dateutil
      - six
      - weakrefmethod
      - zmq
      - redis
      - python-magic
      - plyara
    virtualenv: "{{ path_to_misp }}/venv"

- name: Install CakePHP via composer
  shell: |
    cd {{ path_to_misp }}/app
    php composer.phar install --no-dev

# --- Permissions ---
- name: Fix ownership and permissions for MISP
  file:
    path: "{{ path_to_misp }}"
    owner: "{{ www_user }}"
    group: "{{ www_user }}"
    recurse: yes

# === Database and Apache ===
- name: Install python3-pymysql
  apt:
    name: python3-pymysql
    state: present

- name: Configure Apache for HTTP only
  copy:
    dest: /etc/apache2/sites-available/misp.conf
    content: |
      <VirtualHost *:80>
          ServerAdmin admin@{{ fqdn }}
          ServerName {{ fqdn }}
          DocumentRoot {{ path_to_misp }}/app/webroot
          <Directory {{ path_to_misp }}/app/webroot>
              Options -Indexes
              AllowOverride All
              Require all granted
          </Directory>
          ErrorLog ${APACHE_LOG_DIR}/misp_error.log
          CustomLog ${APACHE_LOG_DIR}/misp_access.log combined
      </VirtualHost>

- name: Enable Apache site and modules
  shell: |
    a2enmod rewrite
    a2ensite misp.conf
    a2dissite 000-default
    systemctl reload apache2

# --- Final Ownership ---
- name: Final permission fix for MISP
  file:
    path: "{{ path_to_misp }}"
    owner: "{{ www_user }}"
    group: "{{ www_user }}"
    recurse: yes

